#define DIR_PIN 8
#define STEP_PIN 9

int delaytime = 1000; // Tempo de atraso em microssegundos (por exemplo, 10 microssegundos)

// ports used to control the stepper motor
// if your motor rotate to the opposite direction, 
// change the order as {4, 5, 6, 7};
int port[4] = {4, 5, 6, 7};

// sequence of stepper motor control
int seq[8][4] = {
  {  LOW, HIGH, HIGH,  LOW},
  {  LOW,  LOW, HIGH,  LOW},
  {  LOW,  LOW, HIGH, HIGH},
  {  LOW,  LOW,  LOW, HIGH},
  { HIGH,  LOW,  LOW, HIGH},
  { HIGH,  LOW,  LOW,  LOW},
  { HIGH, HIGH,  LOW,  LOW},
  {  LOW, HIGH,  LOW,  LOW}
};

void rotate(int step) {
  static int phase = 0;
  int i, j;
  int delta = (step > 0) ? 1 : 7;

  step = (step > 0) ? step : -step;
  for(j = 0; j < step; j++) {
    phase = (phase + delta) % 8;
    for(i = 0; i < 4; i++) {
      digitalWrite(port[i], seq[phase][i]);
    }
    delayMicroseconds(delaytime); // Mudança para delayMicroseconds() para atraso em microssegundos
  }
  // power cut
  for(i = 0; i < 4; i++) {
    digitalWrite(port[i], LOW);
  }
}



void setup() {
  pinMode(DIR_PIN, OUTPUT);
  pinMode(STEP_PIN, OUTPUT);

  pinMode(port[0], OUTPUT);
  pinMode(port[1], OUTPUT);
  pinMode(port[2], OUTPUT);
  pinMode(port[3], OUTPUT);
}

void loop() {
  // Define a direção do motor (0 para horário, 1 para anti-horário)
  digitalWrite(DIR_PIN, LOW); // Mude para LOW para girar no sentido horário

  // Gire o motor de passo
  // for (int i = 0; i < 500; i++) { // 200 passos para uma rotação completa (pode variar)
  //   digitalWrite(STEP_PIN, HIGH);
  //   delayMicroseconds(800); // Ajuste este valor conforme necessário para a velocidade desejada
  //   digitalWrite(STEP_PIN, LOW);
  //   delayMicroseconds(800); // Ajuste este valor conforme necessário para a velocidade desejada
  // }

 // delay(1000);

  rotate(5*4096 + (4096 / 3) *2);
  // Parar por 5 segundos
  // delay(5000); // 5000 milissegundos = 5 segundos

  delay(5000); // Aguarde um segundo antes de inverter a direção

  // Inverte a direção do motor
  // digitalWrite(DIR_PIN, LOW); // Mude para HIGH para girar no sentido anti-horário

  // // Gire o motor de passo na direção oposta
  // for (int i = 0; i < 200; i++) { // 200 passos para uma rotação completa (pode variar)
  //   digitalWrite(STEP_PIN, HIGH);
  //   delayMicroseconds(800); // Ajuste este valor conforme necessário para a velocidade desejada
  //   digitalWrite(STEP_PIN, LOW);
  //   delayMicroseconds(800); // Ajuste este valor conforme necessário para a velocidade desejada
  // }

  // delay(1000); // Aguarde um segundo antes de repetir o processo
}
